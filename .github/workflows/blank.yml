
name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  schedule:
  #  - cron: "* * * * *" # every min
  #  - cron: "*/10 * * * *" # every 10min 
    - cron: "30 19 * * *" # every day 2130 
  #  - cron: "0 8 * * 1" # At 08:00 on Monday
  #  - cron: "0 0 * * 0" # “At 00:00 on Sunday.”


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Install stuff
        run: |
          sudo apt-get update
          sudo apt-get install fortune
          sudo apt-get install cowsay
          sudo apt-get install rename

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: |
          echo CiaoBello
          #lscpu | grep "CPU"
      
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          #echo Run script
          #bash script.sh

      - name: Commit and push changes
        run: |
          fortune > message.txt
          #echo diffi > diff-test.txt
          #cat diff-* > diff.txt

          echo Run script
          echo cacca > diff-cacca
          echo cacca > old-out-cacca
          rm old-out* diff-*
          dd=$(env TZ=Europe/Berlin date | sed 's/ /-/g')

          #-------- rename out-cani-gatti-* ---------
          ls out-cani-gatti-* | awk '{print "mv " $1 " old-"$1}' > run.sh
          bash run.sh
          rm run.sh
          #-------- rename out-cani-gatti-* ---------END

          wget https://www.spalv.ch/it/animali/smarriti
          egrep -i "muralto|minusio|tenero|locarno" smarriti* --color | sed 's/ /\n/g' | grep href | grep -v "><img" > out-cani-gatti-$dd.txt
          rm smarriti*
          diff old-out-cani-gatti-* out-cani-gatti-* > diff-cani-gatti-$dd.txt
          rm old-out-* 

          # testing new things <<< 20240402 >>>:
          # https://www.oasi.ti.ch/web/dati/selezione-avanzata.html?bG9jYXRpb25zPSU1QiU3QiUyMmRvbWFpbiUyMiUzQSUyMmFpciUyMiUyQyUyMmxvY2F0aW9uJTIyJTNBJTIyYWlyXzQyMyUyMDAyJTIwMDIlMjIlMkMlMjJyZXNvbHV0aW9uJTIyJTNBJTIyZCUyMiUyQyUyMnBhcmFtZXRlciUyMiUzQSUyMk8zJTIyJTJDJTIyZnJvbSUyMiUzQSUyMjIwMjQtMDQtMDglMjIlMkMlMjJ0byUyMiUzQSUyMjIwMjQtMDQtMTUlMjIlN0QlNUQ=
          date1=$(date -I -d "+0 days")
          date2=$(date -I -d "+6 days") # date '+%Y%m%d-%H%M%S' con time
          #wget "https://www.oasi.ti.ch/web/rest/measure/csv?domain=air&resolution=d&parameter=O3&from=$date1&to=$date2&location=air_[0-9][0-9][0-9]%[0-9][0-9][0-9][0-9]%[0-9][0-9][0-9][0-9]"  -O O3.dat
          #wget "https://www.oasi.ti.ch/web/rest/measure/csv?domain=air&resolution=d&parameter=NO2&from=$date1&to=$date2&location=air_[0-9][0-9][0-9]%[0-9][0-9][0-9][0-9]%[0-9][0-9][0-9][0-9]"  -O NO2.dat
          #wget "https://www.oasi.ti.ch/web/rest/measure/csv?domain=air&resolution=d&parameter=PM10&from=$date1&to=$date2&location=air_[0-9][0-9][0-9]%[0-9][0-9][0-9][0-9]%[0-9][0-9][0-9][0-9]"  -O PM10.dat
          #wget "https://www.oasi.ti.ch/web/rest/measure/csv?domain=air&resolution=d&parameter=PM2.5&from=$date1&to=$date2&location=air_[0-9][0-9][0-9]%[0-9][0-9][0-9][0-9]%[0-9][0-9][0-9][0-9]"  -O PM2.5.dat
          echo DONE Run script










          
          
